name: SonarQube Analysis

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: windows-latest # ИСПОЛЬЗУЕМ WINDOWS

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install and Download SonarScanner
        run: |
          # 1. Скачиваем SonarScanner CLI
          Invoke-WebRequest -Uri "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip" -OutFile "sonar-scanner-cli.zip"

          # 2. Устанавливаем 7-Zip (если он не установлен)
          if (-not (Get-Command 7z -ErrorAction SilentlyContinue)) {
            Write-Host "7-Zip не установлен. Устанавливаем..."
            & {
              Invoke-WebRequest -Uri "https://www.7-zip.org/a/7z2301-x64.exe" -OutFile "7z.exe"
              .\7z.exe /S
              Remove-Item "7z.exe"
            }
          }

          # 3. Создаём директорию sonar-scanner
          New-Item -ItemType Directory -Name sonar-scanner -ErrorAction SilentlyContinue

          # 4. Разархивируем в созданную директорию с помощью 7-Zip
          & "C:\Program Files\7-Zip\7z.exe" x "sonar-scanner-cli.zip" -o"sonar-scanner" -y

          # 5. Выводим список файлов и папок В КОРНЕВОЙ ДИРЕКТОРИИ
          Write-Host "Содержимое корневой директории:"
          Get-ChildItem -Path .

          # 6. Выводим список файлов и папок В ПАПКЕ sonar-scanner
          Write-Host "Содержимое папки sonar-scanner:"
          Get-ChildItem -Path "sonar-scanner"

      - name: Run SonarScanner
        run: |
          # Ищем файл sonar-scanner.bat во всех подпапках папки sonar-scanner
          $sonarScannerPath = Get-ChildItem -Path ".\sonar-scanner" -Recurse -Filter "sonar-scanner.bat" -ErrorAction SilentlyContinue | Select-Object -ExpandProperty FullName

          # Если файл найден
          if ($sonarScannerPath) {
            Write-Host "Файл sonar-scanner.bat найден по пути: $sonarScannerPath"

            # Создаем хэш-таблицу с параметрами
            $sonarScannerParams = @{
              "Dsonar.projectKey" = "Fredrix24_caesarcipher"
              "Dsonar.organization" = "fredrix24"
              "Dsonar.projectName" = "Caesar Cipher Project"
              "Dsonar.sources" = "."
              "Dsonar.sourceEncoding" = "UTF-8"
              "Dsonar.host.url" = "https://sonarcloud.io"
              "Dsonar.login" = "${{ secrets.SONAR_TOKEN }}"
              # "-X" = $true # Включаем отладку, но передадим как отдельный аргумент для простоты
            }

            # Строим строку параметров для вызова sonar-scanner
            $paramList = @() # Массив для хранения параметров
            foreach ($param in $sonarScannerParams.GetEnumerator()) {
              # Добавляем каждый параметр как отдельный элемент массива
              $paramList += "-${param.Key} `"$($param.Value)`""
            }

            # Добавляем параметр отладки (-X) отдельно
            $paramList += "-X"

            # Запускаем SonarScanner с параметрами
            & $sonarScannerPath $paramList
          } else {
            Write-Host "Ошибка: Файл sonar-scanner.bat НЕ найден ни в одной подпапке папки sonar-scanner"
            exit 1
          }